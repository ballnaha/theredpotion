{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/laragon/www/theredpotion/apps/customer/src/app/api/liff/config/route.ts"],"sourcesContent":["// ðŸ“± LIFF Configuration API\r\n// GET /api/liff/config?tenant=restaurant1\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const tenantId = searchParams.get('tenantId') || 'restaurant1';\r\n\r\n    // Get restaurant configuration from database\r\n    const restaurant = await prisma.restaurant.findFirst({\r\n      where: { slug: tenantId },\r\n      select: {\r\n        id: true,\r\n        name: true,\r\n        slug: true,\r\n        domain: true,\r\n        liffId: true,\r\n        lineChannelId: true,\r\n        primaryColor: true,\r\n        secondaryColor: true,\r\n        logo: true,\r\n      }\r\n    });\r\n\r\n    if (!restaurant) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        message: 'Restaurant not found'\r\n      }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        tenantId: restaurant.slug,\r\n        name: restaurant.name,\r\n        domain: restaurant.domain,\r\n        liffId: restaurant.liffId,\r\n        theme: {\r\n          primaryColor: restaurant.primaryColor || '#10b981',\r\n          secondaryColor: restaurant.secondaryColor || '#059669',\r\n          logo: restaurant.logo || '/images/logo_1_1.png',\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('LIFF config API error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      message: 'Internal server error'\r\n    }, { status: 500 });\r\n  }\r\n} "],"names":[],"mappings":"AAAA,4BAA4B;AAC5B,0CAA0C;;;;AAE1C;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,WAAW,aAAa,GAAG,CAAC,eAAe;QAEjD,6CAA6C;QAC7C,MAAM,aAAa,MAAM,OAAO,UAAU,CAAC,SAAS,CAAC;YACnD,OAAO;gBAAE,MAAM;YAAS;YACxB,QAAQ;gBACN,IAAI;gBACJ,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR,QAAQ;gBACR,eAAe;gBACf,cAAc;gBACd,gBAAgB;gBAChB,MAAM;YACR;QACF;QAEA,IAAI,CAAC,YAAY;YACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,SAAS;YACX,GAAG;gBAAE,QAAQ;YAAI;QACnB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,UAAU,WAAW,IAAI;gBACzB,MAAM,WAAW,IAAI;gBACrB,QAAQ,WAAW,MAAM;gBACzB,QAAQ,WAAW,MAAM;gBACzB,OAAO;oBACL,cAAc,WAAW,YAAY,IAAI;oBACzC,gBAAgB,WAAW,cAAc,IAAI;oBAC7C,MAAM,WAAW,IAAI,IAAI;gBAC3B;YACF;QACF;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;QACX,GAAG;YAAE,QAAQ;QAAI;IACnB;AACF","debugId":null}}]
}